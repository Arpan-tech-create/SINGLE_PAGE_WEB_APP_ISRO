<!DOCTYPE html>
<html>
<head>
    <title>Add Data</title>
    <link rel="stylesheet" href="{{url_for('static',filename='style.css')}}">
</head>
<body>
    <div class="container">
        <h1>Add Data</h1>
        <form id="add-data-form" method="post" action="{{ url_for('add_data') }}">
            <label for="column1">Column 1:</label>
            <input type="text" id="column1" name="column1"><br><br>
            <label for="column2">Column 2:</label>
            <input type="text" id="column2" name="column2"><br><br>
            <button type="submit" id="add-data-form">Add Data</button>
        </form>
        <br> 
        <h2>Data Table</h2>
        <table>
            <thead>
                <tr>
                    <th>Sr.No</th>
                    <th>Column 1</th>
                    <th>Column 2</th>
                    <th>Actions</th>
                </tr> 
            </thead>
            <tbody>
                {% for row in data %}
                <tr>
                    <td>{{ row[0] }}</td>
                    <td>{{ row[1] }}</td>
                    <td>{{ row[2] }}</td>
                    <td>
                        <button type="button" id="delete-btn-{{ row[0] }}" class="delete-button">Delete</button>
                        </td>
               
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
    <script src="{{url_for('static',filename='vue.js')}}"></script>
    <script src="{{url_for('static',filename='axios.js')}}"></script>
    <script>
        new Vue({
            el: '#add-data-form',
            methods: {
                addData: function(event) {
                    event.preventDefault();
                    let formData = new FormData(event.target);
                    let data = {};
                    formData.forEach(function(value, key) {
                        data[key] = value;
                    });
                    axios.post('/add_data', data)
                        .then(function(response) {
                            console.log(response.data);
                            alert(response.data.message);
                            location.reload();
                        })
                        .catch(function(error) {
                            console.log(error);
                            alert('Error adding data');
                        });
						
                },
				refreshTable: function() {
					axios.get('/get_data')
						.then(function(response) {
							this.data = response.data;
						}.bind(this))
						.catch(function(error) {
							console.log(error);
						});
				},
                deleteRow: function(id) {
            axios.delete('/delete_data/' + id)
                .then(function(response) {
                    console.log(response.data);
                    alert(response.data.message);
                    this.refreshTable();
                }.bind(this))
                .catch(function(error) {
                    console.log(error);
                    alert('Error deleting row');
                });
        },

    },
    mounted: function() {
        let deleteButtons = document.querySelectorAll('.delete-button');
        deleteButtons.forEach(function(button) {
            button.addEventListener('click', function(event) {
                event.preventDefault();
                let rowId = button.id.split('-')[2];
                this.deleteRow(rowId);
            }.bind(this));
        }.bind(this));
    },
       });
    </script>
</body>
</html>
